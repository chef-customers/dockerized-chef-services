# Configurable environment variables:
# AUTOMATE_DOCKER_ORIGIN - denotes the docker origin (dockerhub ID) or default to `chefdemo`
# AUTOMATE_VERSION -  the version identifier tag on the postgresql and elasticsearch packages from the `chefdemo` docker origin
# HOST_IP - the IP address of the docker host. 172.17.0.1 is commonly the docker0 interface which is fine
# ENTERPRISE - the name of the Automate enterprise to create
# ADMIN_PASSWORD - the initial password to set for the 'admin' user in the Automate UI
# AUTOMATE_TOKEN - the token for the Automate server data collector

version: '2.1'
services:
  postgresql:
    image: ${AUTOMATE_DOCKER_ORIGIN:-chefdemo}/postgresql:${AUTOMATE_VERSION:-stable}
    network_mode: host
    environment:
      HAB_POSTGRESQL: |
        [superuser]
        name = 'hab'
        password = 'chefrocks'
    volumes:
      - ${PWD}/CTL_SECRET:/hab/sup/default/CTL_SECRET
      - postgresql-data:/hab/svc/postgresql/data

  rabbitmq:
    image: ${AUTOMATE_DOCKER_ORIGIN:-chefdemo}/rabbitmq:${AUTOMATE_VERSION:-stable}
    network_mode: host
    command: --peer ${HOST_IP:-172.17.0.1}
      --listen-gossip 0.0.0.0:9650
      --listen-http 0.0.0.0:9660
    depends_on:
      - postgresql
    environment:
      HAB_RABBITMQ: |
        [rabbitmq]
        default_vhost = '/insights'
        default_user = 'insights'
        default_pass = 'chefrocks'
        [rabbitmq.management]
        enabled = true
    volumes:
      - ${PWD}/CTL_SECRET:/hab/sup/default/CTL_SECRET
      - rabbitmq-data:/hab/svc/rabbitmq/data

  elasticsearch:
    image: ${AUTOMATE_DOCKER_ORIGIN:-chefserverofficial}/elasticsearch5:${AUTOMATE_VERSION:-latest}
    network_mode: host
    command: --peer ${HOST_IP:-172.17.0.1}
      --listen-gossip 0.0.0.0:9651
      --listen-http 0.0.0.0:9661
    depends_on:
      - postgresql
    volumes:
      - ${PWD}/CTL_SECRET:/hab/sup/default/CTL_SECRET
      - elasticsearch-data:/hab/svc/elasticsearch/data

  logstash:
    image: ${AUTOMATE_DOCKER_ORIGIN:-chefdemo}/logstash:${AUTOMATE_VERSION:-stable}
    network_mode: host
    command: --peer ${HOST_IP:-172.17.0.1}
      --bind elasticsearch:elasticsearch5.default
      --bind rabbitmq:rabbitmq.default
      --listen-gossip 0.0.0.0:9652
      --listen-http 0.0.0.0:9662
    depends_on:
      - postgresql
    volumes:
      - ${PWD}/CTL_SECRET:/hab/sup/default/CTL_SECRET

  workflow-server:
    image: ${AUTOMATE_DOCKER_ORIGIN:-chefdemo}/workflow-server:${AUTOMATE_VERSION:-stable}
    network_mode: host
    command: --peer ${HOST_IP:-172.17.0.1}
      --bind database:postgresql.default
      --bind elasticsearch:elasticsearch5.default
      --bind rabbitmq:rabbitmq.default
      --listen-gossip 0.0.0.0:9653
      --listen-http 0.0.0.0:9663
    depends_on:
      - postgresql
    environment:
      HAB_WORKFLOW_SERVER: |
        enterprise = '${ENTERPRISE:-default}'
        default_admin_password = '${ADMIN_PASSWORD:-chefrocks}'

        [data_collector]
        token = "${AUTOMATE_TOKEN:-93a49a4f2482c64126f7b6015e6b0f30284287ee4054ff8807fb63d9cbd1c506}"
        [mlsa]
        accept = true
    volumes:
      - ${PWD}/CTL_SECRET:/hab/sup/default/CTL_SECRET
      - maintenance:/var/opt/delivery/delivery/etc
      - workflow-data:/hab/svc/workflow-server/data

  notifications:
    image: ${AUTOMATE_DOCKER_ORIGIN:-chefdemo}/notifications:${AUTOMATE_VERSION:-stable}
    network_mode: host
    command: --peer ${HOST_IP:-172.17.0.1}
      --bind elasticsearch:elasticsearch5.default
      --bind rabbitmq:rabbitmq.default
      --listen-gossip 0.0.0.0:9654
      --listen-http 0.0.0.0:9664
    depends_on:
      - postgresql
    volumes:
      - ${PWD}/CTL_SECRET:/hab/sup/default/CTL_SECRET

  compliance:
    image: ${AUTOMATE_DOCKER_ORIGIN:-chefdemo}/compliance:${AUTOMATE_VERSION:-stable}
    network_mode: host
    command: --peer ${HOST_IP:-172.17.0.1}
      --bind elasticsearch:elasticsearch5.default
      --bind postgresql:postgresql.default
      --listen-gossip 0.0.0.0:9655
      --listen-http 0.0.0.0:9665
    depends_on:
      - postgresql
    volumes:
      - ${PWD}/CTL_SECRET:/hab/sup/default/CTL_SECRET
      - compliance-data:/hab/svc/compliance/data

  automate-nginx:
    image: ${AUTOMATE_DOCKER_ORIGIN:-chefdemo}/automate-nginx:${AUTOMATE_VERSION:-stable}
    network_mode: host
    command: --peer ${HOST_IP:-172.17.0.1}
      --bind compliance:compliance.default
      --bind elasticsearch:elasticsearch5.default
      --bind workflow:workflow-server.default
      --bind notifications:notifications.default
      --listen-gossip 0.0.0.0:9656
      --listen-http 0.0.0.0:9666
    depends_on:
      - postgresql
    environment:
      HAB_AUTOMATE_NGINX: |
        port = ${PILOT_HTTP_PORT:-8080}
        ssl_port = ${PILOT_HTTPS_PORT:-8443}
        [mlsa]
        accept = true
    volumes:
      - ${PWD}/CTL_SECRET:/hab/sup/default/CTL_SECRET
      - maintenance:/var/opt/delivery/delivery/etc
      - nginx-data:/hab/svc/automate-nginx/data

volumes:
  compliance-data:
  elasticsearch-data:
  maintenance:
  nginx-data:
  postgresql-data:
  rabbitmq-data:
  workflow-data:
